plugins {
    id 'com.android.application'
}

def taskName = getGradle().getStartParameter().getTaskRequests().toString()


ext {
    FDroidCodeNumber = 4842
    FDroidVersionNumber = "8.6.47"
}

println " --------------------"
println " taskName: " + taskName
println " --------------------"

ext {
    if (!taskName.contains("Fdroid")) {
        codeNumber = Integer.parseInt(appCodeNumber)
        versionNumber = appVersionNumberBase + "." + appVersionNumberIndex
    } else {
        codeNumber = FDroidCodeNumber
        versionNumber = FDroidVersionNumber
    }

    println ""
    println "Version: [" + versionNumber + " - " + codeNumber + "]"
}

android {
    buildToolsVersion '33.0.0'
    compileSdk 33
    namespace "com.foobnix.pdf.info"
    //ndkVersion "21.4.7075529"
    defaultConfig {
        applicationId "com.foobnix.pdf.reader"
        minSdk 19
        targetSdk 33
        versionCode codeNumber
        versionName versionNumber
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    configurations {
        all {
            exclude module: 'httpclient'
            exclude module: 'commons-logging'
        }
    }

    lint {
        abortOnError true
        ignoreWarnings true
        checkReleaseBuilds taskName.contains("Pro")
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            debuggable false
            proguardFiles 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    splits {
        abi {
            enable true
            reset()
            include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }

    flavorDimensions.add("version")
    productFlavors {
        beta {
            dimension "version"
            applicationId "com.foobnix.pdf.reader"
            manifestPlaceholders = [
                    appName      : "MuPDF-1.11",
                    appIcon      : "@mipmap/icon_pdf_reader",
                    appRoundIcon : "@mipmap/icon_pdf_reader",
                    appGdriveKey : "961762082517-dgsen03hb73s6oh59ovivcansatu16lc.apps.googleusercontent.com",
                    admobAppId   : "ca-app-pub-8347903083053959~8769894873",
                    admobBannerId: "ca-app-pub-8347903083053959/4166397275",
                    admobFullId  : "ca-app-pub-8347903083053959/2769081274",
                    appSafeMode  : "true"
            ]
        }

        old {
            minSdk 14
            dimension "version"
            applicationId "com.foobnix.pdf.reader.a1"
            manifestPlaceholders = [
                    appName      : "Librera Old",
                    appIcon      : "@mipmap/icon_pdf_reader",
                    appRoundIcon : "@mipmap/icon_pdf_reader",
                    appGdriveKey : "",
                    admobAppId   : "",
                    admobBannerId: "",
                    admobFullId  : "",
                    appSafeMode  : "true"
            ]
        }

        librera {
            dimension "version"
            applicationId "com.foobnix.pdf.reader"
            manifestPlaceholders = [
                    appName      : "Librera",
                    appIcon      : "@mipmap/icon_pdf_reader",
                    appRoundIcon : "@mipmap/icon_pdf_reader",
                    appGdriveKey : "961762082517-dgsen03hb73s6oh59ovivcansatu16lc.apps.googleusercontent.com",
                    admobAppId   : "ca-app-pub-8347903083053959~8769894873",
                    admobBannerId: "ca-app-pub-8347903083053959/4166397275",
                    admobFullId  : "ca-app-pub-8347903083053959/2769081274",
                    appSafeMode  : "false"
            ]
        }
        huawei {
            dimension "version"
            applicationId "com.foobnix.pdf.reader"
            manifestPlaceholders = [
                    appName      : "Librera",
                    appIcon      : "@mipmap/icon_pdf_reader",
                    appRoundIcon : "@mipmap/icon_pdf_reader",
                    appGdriveKey : "961762082517-dgsen03hb73s6oh59ovivcansatu16lc.apps.googleusercontent.com",
                    admobAppId   : "ca-app-pub-8347903083053959~8769894873",
                    admobBannerId: "ca-app-pub-8347903083053959/4166397275",
                    admobFullId  : "ca-app-pub-8347903083053959/2769081274",
                    appSafeMode  : "false"
            ]
        }
        pro {
            minSdk 19
            dimension "version"
            applicationId "com.foobnix.pro.pdf.reader"
            manifestPlaceholders = [
                    appName      : "Librera",
                    appIcon      : "@mipmap/icon_pdf_pro",
                    appRoundIcon : "@mipmap/icon_pdf_pro",
                    appGdriveKey : "961762082517-ej9mdc7bgp7jkd6hvbfimvda6vpi5p4t.apps.googleusercontent.com",
                    admobAppId   : "",
                    admobBannerId: "",
                    admobFullId  : "",
                    appSafeMode  : "false"
            ]
        }
        pdf_classic {
            dimension "version"
            applicationId "classic.pdf.reader.viewer.djvu.epub.fb2.txt.mobi.book.reader.lirbi.libri"
            manifestPlaceholders = [
                    appName      : "PDF Reader",
                    appIcon      : "@mipmap/icon_pdf_classic",
                    appRoundIcon : "@mipmap/launcher_classic",
                    appGdriveKey : "961762082517-5825mr1t8duo7tlnkdr6itersmlreejq.apps.googleusercontent.com",
                    admobAppId   : "ca-app-pub-8347903083053959~8457312875",
                    admobBannerId: "ca-app-pub-8347903083053959/5364245672",
                    admobFullId  : "ca-app-pub-8347903083053959/7763820878",
                    appSafeMode  : "true"
            ]
        }
        ebooka {
            dimension "version"
            applicationId "droid.reader.book.epub.mobi.pdf.djvu.fb2.txt.azw.azw3"
            manifestPlaceholders = [
                    appName      : "RED Reader",
                    appIcon      : "@mipmap/icon_pdf_droid",
                    appRoundIcon : "@mipmap/launcher_droid",
                    appGdriveKey : "961762082517-3ud6u3hmjlbbpqdsqtk9md55o5jgkg41.apps.googleusercontent.com",
                    admobAppId   : "ca-app-pub-8347903083053959~5153060505",
                    admobBannerId: "ca-app-pub-8347903083053959/6159730856",
                    admobFullId  : "ca-app-pub-8347903083053959/2346153515",
                    appSafeMode  : "false"
            ]
        }
        pdf_v2 {
            dimension "version"
            applicationId "pdf.pdf.reader"
            manifestPlaceholders = [
                    appName      : "PDF Reader",
                    appIcon      : "@mipmap/icon_pdf_2",
                    appRoundIcon : "@mipmap/launcher_pdf_v2",
                    appGdriveKey : "961762082517-eiun09s9u6vferhd9avnkjmgs7ob9tns.apps.googleusercontent.com",
                    admobAppId   : "ca-app-pub-8347903083053959~5943988213",
                    admobBannerId: "ca-app-pub-8347903083053959/6705625294",
                    admobFullId  : "ca-app-pub-8347903083053959/1346267659",
                    appSafeMode  : "false"
            ]
        }
        tts_reader {
            dimension "version"
            applicationId "tts.reader"
            manifestPlaceholders = [
                    appName      : "TTS Reader",
                    appIcon      : "@mipmap/icon_tts_reader_app",
                    appRoundIcon : "@mipmap/launcher_tts_reader_app",
                    appGdriveKey : "961762082517-kaap4rki1p1vjdcd2jk5j8o8krckm24a.apps.googleusercontent.com",
                    admobAppId   : "ca-app-pub-8347903083053959~1533135764",
                    admobBannerId: "ca-app-pub-8347903083053959/2702801102",
                    admobFullId  : "ca-app-pub-8347903083053959/4602986382",
                    appSafeMode  : "false"
            ]
        }
        epub_reader {
            dimension "version"
            applicationId "epub.reader"
            manifestPlaceholders = [
                    appName      : "Epub Reader",
                    appIcon      : "@mipmap/icon_epub_reader",
                    appRoundIcon : "@mipmap/launcher_epub_reader",
                    appGdriveKey : "961762082517-p6b2kqqimju6rlp314mu56lipvq2m68r.apps.googleusercontent.com",
                    admobAppId   : "ca-app-pub-8347903083053959~8118779310",
                    admobBannerId: "ca-app-pub-8347903083053959/1553370961",
                    admobFullId  : "ca-app-pub-8347903083053959/6163356354",
                    appSafeMode  : "false"
            ]
        }
        fdroid {
            minSdk 14
            dimension "version"
            applicationId "com.foobnix.pro.pdf.reader"
            manifestPlaceholders = [
                    appName      : "Librera",
                    appIcon      : "@mipmap/icon_pdf_pro",
                    appRoundIcon : "@mipmap/icon_pdf_pro",
                    appGdriveKey : "",
                    admobAppId   : "",
                    admobBannerId: "",
                    admobFullId  : "",
                    appSafeMode  : "true"
            ]
            versionNameSuffix '-fdroid'
        }
    }

    def abiCodes = ['armeabi-v7a': 0, 'arm64-v8a': 1, 'x86': 2, 'x86_64': 3]

    applicationVariants.all { variant ->

        variant.outputs.all { output ->

            def flavor = variant.productFlavors[0].name.capitalize()
            def abiName = getFilter("ABI")
/*            if (abiName == "armeabi-v7a") {
                variant.mergedFlavor.manifestPlaceholders.appSafeMode = "true"
                //variant.resValue "string", "[appSafeMode]", "true"
                println abiName + " : appSafeMode true "
            } else {
                variant.mergedFlavor.manifestPlaceholders.appSafeMode = "true"
                //variant.resValue "string", "[appSafeMode]", "false"
                println abiName + " : appSafeMode false"
            }
*/
            if (abiName != null) {
                def code = abiCodes.get(abiName, 0) + variant.versionCode
                abiName = abiName.replace("arm64-v8a", "arm64").replace("armeabi-v7a", "arm")

                output.versionCodeOverride = code
                //def fullName = "Librera ${flavor}-${versionNumber}-c${code}-d${db}-${abiName}.apk"

                def fullName = "Librera ${flavor}-${versionNumber}-${abiName}.apk"

                output.outputFileName = fullName
            } else {
                //def fullName = "Librera ${flavor}-${versionNumber}-c${codeNumber}-d${db}-universal.apk"
                //def fullName = "Librera ${flavor}-${versionNumber}-universal.apk"
                def fullName = "Librera ${flavor}-${versionNumber}-uni.apk"
                output.versionCodeOverride = codeNumber
                output.outputFileName = fullName
            }
        }
    }

    sourceSets {
        fdroid { assets.srcDirs = ['src/fdroid/assets', 'src/fdroid/assets/'] }
    }

    packagingOptions {
        resources {
            excludes.addAll(
                    'META-INF/DEPENDENCIES',
                    'META-INF/NOTICE',
                    'META-INF/LICENSE',
                    'META-INF/LICENSE.txt',
                    'META-INF/NOTICE.txt',
            )
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    oldImplementation project(':pro')
    proImplementation project(':pro')
    fdroidImplementation project(':pro')
    implementation project(':smartreflow')

/** Desugaring **/
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'

/** AndroidX **/
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'

/** Third-party **/
    implementation 'com.github.axet:lame:1.0.9'

    implementation 'org.greenrobot:eventbus:3.3.1'
    implementation('org.greenrobot:greendao:3.3.0') {
        exclude group: 'org.greenrobot.greendao.rx'
    }
    implementation 'org.greenrobot:greendao-api:3.3.0'
    implementation 'org.jsoup:jsoup:1.15.2'

    implementation 'com.github.albfernandez:juniversalchardet:2.4.0'

    implementation 'com.squareup.okhttp3:okhttp:3.12.6'
    implementation 'io.github.rburgst:okhttp-digest:1.21'
    implementation 'com.squareup.okio:okio-parent:1.17.5'

    implementation 'com.github.joniles:rtfparserkit:1.16.0'
    implementation 'org.zwobble.mammoth:mammoth:1.5.0'
    implementation 'javax.xml.stream:stax-api:1.0'
    implementation 'net.lingala.zip4j:zip4j:2.11.1'
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    //implementation 'com.google.guava:guava:27.0.1-android'

/** Ads **/
    def google_ads = "com.google.android.gms:play-services-ads:21.1.0"
    libreraImplementation google_ads
    betaImplementation google_ads
    pdf_v2Implementation google_ads
    ebookaImplementation google_ads
    tts_readerImplementation google_ads
    pdf_classicImplementation google_ads
    epub_readerImplementation google_ads
    huaweiImplementation google_ads

/** Testing **/
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}


task copyApks() {
    if (project.hasProperty('beta')) {
        println "My Task: [copy apks]"

        delete fileTree("/home/dev/Dropbox/FREE_PDF_APK/testing").include("*.apk")
        delete fileTree("/home/dev/Nextcloud/LibreraBeta").include("*.apk")

        android.applicationVariants.all { variant ->
            if ("release" == variant.buildType.name) {
                def flavor = variant.productFlavors[0].name

                //println "====  " + variant.buildType.name + " " +  flavor

                ["/home/dev/Dropbox/FREE_PDF_APK/testing",
                 "/home/dev/Nextcloud/LibreraBeta"].each { dest ->
                    copy {
                        from file(
                                "build/outputs/apk/${flavor}/release/"
                        )
                        include "*.apk"
                        into file(dest)
                        println "Copy: '" + flavor + "' to " + dest
                    }
                }
            }
        }

        //File file = new File('/home/data/Dropbox/FREE_PDF_APK/testing/version.txt')
        //file.write versionNumber
    }
}


task incVersion() {
    doLast {
        Properties props = new Properties()
        File progejectDir = layout.projectDirectory.getAsFile()
        println "progejectDir :" + progejectDir

        File propsFile = new File(progejectDir, 'gradle.properties')

        props.load(propsFile.newDataInputStream())

        int appCodeNumber = Integer.parseInt(props.getProperty('appCodeNumber'))
        appCodeNumber += 4

        int appVersionNumberIndex = Integer.parseInt(props.getProperty('appVersionNumberIndex'))
        appVersionNumberIndex += 1

        props.setProperty('appCodeNumber', "" + appCodeNumber)
        props.setProperty('appVersionNumberIndex', "" + appVersionNumberIndex)

        props.store(propsFile.newWriter(), null)

        println "My Task: [incVersion]"
    }
}

if (!taskName.contains("Fdroid")) {

    apply plugin: 'com.google.gms.google-services'

    dependencies {
        implementation "com.github.junrar:junrar:4.0.0"
        implementation "commons-logging:commons-logging-api:1.1"

        implementation 'com.cloudrail:cloudrail-si-android:2.22.4'


        implementation 'com.google.android.gms:play-services-auth:17.0.0'
        implementation 'com.google.http-client:google-http-client-gson:1.30.2'
        implementation('com.google.api-client:google-api-client-android:1.30.2') {
            exclude group: 'org.apache.httpcomponents'
        }
        implementation('com.google.apis:google-api-services-drive:v3-rev173-1.25.0') {
            exclude group: 'org.apache.httpcomponents'
        }
    }
}
