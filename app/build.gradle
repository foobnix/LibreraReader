apply plugin: 'com.android.application'

def taskName=getGradle().getStartParameter().getTaskRequests().toString();


ext {
    FDroidCodeNumber = 3885
    FDroidVersionNumber = "8.3.83"
}

println " --------------------"
println " taskName: " + taskName
println " --------------------"

ext {
    if(!taskName.contains("Fdroid")) {
        codeNumber = Integer.parseInt(appCodeNumber)
        versionNumber = appVersionNumberBase + "." + appVersionNumberIndex
    }else{
        codeNumber = FDroidCodeNumber
        versionNumber = FDroidVersionNumber
    }

    println ""
    println "Version: [" + versionNumber + " - " + codeNumber + "]"


}

android {
    buildToolsVersion '29.0.3'
    compileSdkVersion 29
    ndkVersion "21.2.6472646"
    defaultConfig {
        applicationId "com.foobnix.pdf.reader"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode codeNumber
        versionName versionNumber
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    configurations {
        all {
            exclude module: 'httpclient'
            exclude module: 'commons-logging'
        }
    }

    lintOptions {
        abortOnError true
        ignoreWarnings true
        checkReleaseBuilds taskName.contains("Pro")

    }
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true

    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }



    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            debuggable false
        }
        debug {
            debuggable true
        }


    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
    }



    splits {
        abi {
            enable true
            reset()
            //include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"

            if(taskName.contains("Huawei") || taskName.contains("Beta") ||taskName.contains("Alpha")){
                include "arm64-v8a"
            }else if(taskName.contains("Fdroid") || project.hasProperty('beta')) {
                //only universal
            }else{
                include "armeabi-v7a", "arm64-v8a"
            }

            if(taskName.contains("Debug") ||
                    taskName.contains("ProRelease") ||
                    taskName.contains("LibreraRelease") ||
                    taskName.contains("Pdf_classicRelease")){
                include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
            }
            universalApk taskName.contains("Fdroid") || taskName.contains("Pro")
        }

    }


    flavorDimensions "version"
    productFlavors {

        beta {
            dimension "version"
            applicationId "com.foobnix.pdf.reader"
            manifestPlaceholders = [
                    appName       : "Beta Librera",
                    appIcon       : "@mipmap/icon_pdf_reader",
                    appRoundIcon  : "@mipmap/icon_pdf_reader",
                    appGdriveKey  : "961762082517-dgsen03hb73s6oh59ovivcansatu16lc.apps.googleusercontent.com",
                    admobAppId    : "ca-app-pub-8347903083053959~8769894873",
                    admobBannerId : "ca-app-pub-8347903083053959/4166397275",
                    admobFullId   : "ca-app-pub-8347903083053959/2769081274",
                    appSafeMode   : "true"
            ]
        }

        alpha {
            dimension "version"
            applicationId "com.foobnix.pdf.reader.a1"
            manifestPlaceholders = [
                    appName       : "Alpha Librera",
                    appIcon       : "@mipmap/icon_pdf_reader",
                    appRoundIcon  : "@mipmap/icon_pdf_reader",
                    appGdriveKey  : "",
                    admobAppId    : "",
                    admobBannerId : "",
                    admobFullId   : "",
                    appSafeMode   : "true"
            ]
        }

        librera {
            dimension "version"
            applicationId "com.foobnix.pdf.reader"
            manifestPlaceholders = [
                    appName       : "Librera Reader",
                    appIcon       : "@mipmap/icon_pdf_reader",
                    appRoundIcon  : "@mipmap/icon_pdf_reader",
                    appGdriveKey  : "961762082517-dgsen03hb73s6oh59ovivcansatu16lc.apps.googleusercontent.com",
                    admobAppId    : "ca-app-pub-8347903083053959~8769894873",
                    admobBannerId : "ca-app-pub-8347903083053959/4166397275",
                    admobFullId   : "ca-app-pub-8347903083053959/2769081274",
                    appSafeMode   : "false"
            ]
        }
        huawei {
            dimension "version"
            applicationId "com.foobnix.pdf.reader"
            manifestPlaceholders = [
                    appName       : "Librera Reader",
                    appIcon       : "@mipmap/icon_pdf_reader",
                    appRoundIcon  : "@mipmap/icon_pdf_reader",
                    appGdriveKey  : "961762082517-dgsen03hb73s6oh59ovivcansatu16lc.apps.googleusercontent.com",
                    admobAppId    : "ca-app-pub-8347903083053959~8769894873",
                    admobBannerId : "ca-app-pub-8347903083053959/4166397275",
                    admobFullId   : "ca-app-pub-8347903083053959/2769081274",
                    appSafeMode   : "false"
            ]
        }
        pro {
            dimension "version"
            applicationId "com.foobnix.pro.pdf.reader"
            manifestPlaceholders = [
                    appName       : "Librera PRO",
                    appIcon       : "@mipmap/icon_pdf_pro",
                    appRoundIcon  : "@mipmap/icon_pdf_pro",
                    appGdriveKey  : "961762082517-ej9mdc7bgp7jkd6hvbfimvda6vpi5p4t.apps.googleusercontent.com",
                    admobAppId    : "",
                    admobBannerId : "",
                    admobFullId   : "",
                    appSafeMode   : "false"
            ]
        }
        pdf_classic {
            dimension "version"
            applicationId "classic.pdf.reader.viewer.djvu.epub.fb2.txt.mobi.book.reader.lirbi.libri"
            manifestPlaceholders = [
                    appName       : "PDF Reader",
                    appIcon       : "@mipmap/icon_pdf_classic",
                    appRoundIcon  : "@mipmap/launcher_classic",
                    appGdriveKey  : "961762082517-5825mr1t8duo7tlnkdr6itersmlreejq.apps.googleusercontent.com",
                    admobAppId    : "ca-app-pub-8347903083053959~8457312875",
                    admobBannerId : "ca-app-pub-8347903083053959/5364245672",
                    admobFullId   : "ca-app-pub-8347903083053959/7763820878",
                    appSafeMode   : "true"
            ]
        }
        ebooka {
            dimension "version"
            applicationId "droid.reader.book.epub.mobi.pdf.djvu.fb2.txt.azw.azw3"
            manifestPlaceholders = [
                    appName       : "Book Reader",
                    appIcon       : "@mipmap/icon_pdf_droid",
                    appRoundIcon  : "@mipmap/launcher_droid",
                    appGdriveKey  : "961762082517-3ud6u3hmjlbbpqdsqtk9md55o5jgkg41.apps.googleusercontent.com",
                    admobAppId    : "ca-app-pub-8347903083053959~5153060505",
                    admobBannerId : "ca-app-pub-8347903083053959/6159730856",
                    admobFullId   : "ca-app-pub-8347903083053959/2346153515",
                    appSafeMode   : "false"
            ]
        }
        pdf_v2 {
            dimension "version"
            applicationId "pdf.pdf.reader"
            manifestPlaceholders = [
                    appName       : "PDF Reader",
                    appIcon       : "@mipmap/icon_pdf_2",
                    appRoundIcon  : "@mipmap/launcher_pdf_v2",
                    appGdriveKey  : "961762082517-eiun09s9u6vferhd9avnkjmgs7ob9tns.apps.googleusercontent.com",
                    admobAppId    : "ca-app-pub-8347903083053959~5943988213",
                    admobBannerId : "ca-app-pub-8347903083053959/6705625294",
                    admobFullId   : "ca-app-pub-8347903083053959/1346267659",
                    appSafeMode   : "false"
            ]
        }
        tts_reader {
            dimension "version"
            applicationId "tts.reader"
            manifestPlaceholders = [
                    appName       : "TTS Reader",
                    appIcon       : "@mipmap/icon_tts_reader_app",
                    appRoundIcon  : "@mipmap/launcher_tts_reader_app",
                    appGdriveKey  : "961762082517-kaap4rki1p1vjdcd2jk5j8o8krckm24a.apps.googleusercontent.com",
                    admobAppId    : "ca-app-pub-8347903083053959~1533135764",
                    admobBannerId : "ca-app-pub-8347903083053959/2702801102",
                    admobFullId   : "ca-app-pub-8347903083053959/4602986382",
                    appSafeMode   : "false"
            ]
        }
        epub_reader {
            dimension "version"
            applicationId "epub.reader"
            manifestPlaceholders = [
                    appName       : "Epub Reader",
                    appIcon       : "@mipmap/icon_epub_reader",
                    appRoundIcon  : "@mipmap/launcher_epub_reader",
                    appGdriveKey  : "961762082517-p6b2kqqimju6rlp314mu56lipvq2m68r.apps.googleusercontent.com",
                    admobAppId    : "ca-app-pub-8347903083053959~8118779310",
                    admobBannerId : "ca-app-pub-8347903083053959/1553370961",
                    admobFullId   : "ca-app-pub-8347903083053959/6163356354",
                    appSafeMode   : "false"
            ]
        }
        fdroid {
            dimension "version"
            applicationId "com.foobnix.pro.pdf.reader"
            manifestPlaceholders = [
                    appName       : "Librera PRO",
                    appIcon       : "@mipmap/icon_pdf_pro",
                    appRoundIcon  : "@mipmap/icon_pdf_pro",
                    appGdriveKey  : "",
                    admobAppId    : "",
                    admobBannerId : "",
                    admobFullId   : "",
                    appSafeMode   : "true"
            ]
            versionNameSuffix '-fdroid'
        }
    }


    def abiCodes = ['armeabi-v7a': 0, 'arm64-v8a': 1, 'x86': 2, 'x86_64': 3]

    applicationVariants.all { variant ->

        variant.outputs.all { output ->

            def flavor = variant.productFlavors[0].name.capitalize()
            def abiName = getFilter("ABI")
//            if(abiName =="armeabi-v7a"){
//                variant.mergedFlavor.manifestPlaceholders.appSafeMode =  "true";
//                //variant.resValue "string", "[appSafeMode]", "true"
//                println abiName + " : appSafeMode true "
//            }else{
//                variant.mergedFlavor.manifestPlaceholders.appSafeMode =  "true";
//                //variant.resValue "string", "[appSafeMode]", "false"
//                println abiName + " : appSafeMode false"
//            }

            if(abiName!=null) {
                def code = abiCodes.get(abiName, 0) + variant.versionCode
                abiName = abiName.replace("arm64-v8a", "arm64").replace("armeabi-v7a", "arm")

                output.versionCodeOverride = code
                //def fullName = "Librera ${flavor}-${versionNumber}-c${code}-d${db}-${abiName}.apk";
                def fullName = "Librera ${flavor}-${versionNumber}-${abiName}.apk";
                output.outputFileName = fullName;
            }else{
                //def fullName = "Librera ${flavor}-${versionNumber}-c${codeNumber}-d${db}-universal.apk";
                //def fullName = "Librera ${flavor}-${versionNumber}-universal.apk";
                def fullName = "Librera ${flavor}-${versionNumber}-uni.apk";
                output.versionCodeOverride = codeNumber
                output.outputFileName = fullName;

            }

        }
    }


    sourceSets { fdroid { assets.srcDirs = ['src/fdroid/assets', 'src/fdroid/assets/'] } }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.9'
    implementation 'androidx.multidex:multidex:2.0.1'


    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    implementation 'com.github.axet:lame:1.0.6'

    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation('org.greenrobot:greendao:3.2.2') {
        exclude group: 'org.greenrobot.greendao.rx'
    }
    implementation 'org.greenrobot:greendao-api:3.3.0'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'

    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.burgstaller:okhttp-digest:1.18'
    implementation 'com.squareup.okio:okio-parent:1.17.5'

    implementation 'com.github.joniles:rtfparserkit:1.15.0'
    implementation 'org.zwobble.mammoth:mammoth:1.4.1'
    implementation 'javax.xml.stream:stax-api:1.0'
    implementation 'net.lingala.zip4j:zip4j:2.6.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'




    alphaImplementation project(':pro')
    proImplementation project(':pro')
    fdroidImplementation project(':pro')
    implementation project(':smartreflow')

    betaImplementation 'com.google.firebase:firebase-ads-lite:18.3.0'
    libreraImplementation 'com.google.firebase:firebase-ads-lite:18.3.0'
    pdf_v2Implementation 'com.google.firebase:firebase-ads-lite:18.3.0'
    ebookaImplementation 'com.google.firebase:firebase-ads-lite:18.3.0'
    tts_readerImplementation 'com.google.firebase:firebase-ads-lite:18.3.0'
    pdf_classicImplementation 'com.google.firebase:firebase-ads-lite:18.3.0'
    epub_readerImplementation 'com.google.firebase:firebase-ads-lite:18.3.0'
    huaweiImplementation 'com.google.firebase:firebase-ads-lite:18.3.0'


}


task copyApks() {
    if (project.hasProperty('beta')) {
        println "My Task: [copy apks]"

        delete fileTree("/home/data/Dropbox/FREE_PDF_APK/testing").include("*.apk")
        delete fileTree("/home/data/Nextcloud/LibreraBeta").include("*.apk")

        android.applicationVariants.all { variant ->
                if("release" == variant.buildType.name) {
                    def flavor = variant.productFlavors[0].name

                    //println "====  " + variant.buildType.name + " " +  flavor

                    ["/home/data/Dropbox/FREE_PDF_APK/testing",
                     "/home/data/Nextcloud/LibreraBeta"].each { dest ->
                        copy {
                            from file(
                                    "build/outputs/apk/${flavor}/release/"
                            )
                            include "*.apk"
                            into file(dest)
                            println "Copy: '" + flavor + "' to " + dest
                        }
                    }
            }
        }


        //File file = new File('/home/data/Dropbox/FREE_PDF_APK/testing/version.txt')
        //file.write versionNumber
    }
}



task incVersion() {
    doLast {
            Properties props = new Properties()
            File propsFile = new File('app/gradle.properties')
            props.load(propsFile.newDataInputStream())

            int appCodeNumber = Integer.parseInt(props.getProperty('appCodeNumber'))
            appCodeNumber += 4

            int appVersionNumberIndex = Integer.parseInt(props.getProperty('appVersionNumberIndex'))
            appVersionNumberIndex += 1

            props.setProperty('appCodeNumber', "" + appCodeNumber)
            props.setProperty('appVersionNumberIndex', "" + appVersionNumberIndex)

            props.store(propsFile.newWriter(), null)

            println "My Task: [incVersion]"
    }

}

if (!taskName.contains("Fdroid")){

    apply plugin: 'com.google.gms.google-services'

    dependencies {
        implementation 'com.cloudrail:cloudrail-si-android:2.22.4'
        implementation 'com.google.android.gms:play-services-auth:17.0.0'

        implementation 'com.google.http-client:google-http-client-gson:1.30.2'
        implementation('com.google.api-client:google-api-client-android:1.30.2') {
            exclude group: 'org.apache.httpcomponents'
        }
        implementation('com.google.apis:google-api-services-drive:v3-rev173-1.25.0') {
            exclude group: 'org.apache.httpcomponents'
        }
    }
}